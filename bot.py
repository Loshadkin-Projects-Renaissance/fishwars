# -*- coding: utf-8 -*-
import time
import random
import threading
from telebot import types, TeleBot
import traceback
from datetime import datetime
import pytz

from config import token, mongo_url
from db import Database

from constants import *
from lambdas import *

bot = TeleBot(token)

db = Database(mongo_url)

officialchat = -1001721954459
battle_going = False


@bot.message_handler(commands=['switch'], func=lambda c: admin_command(c))
def joke_handler(m):
    if m.text.count(' ') == 0:
        return
    setting = m.text.split(' ', 1)[1]
    result = db.switch_setting(setting)
    if result is None:
        bot.send_message(m.chat.id, '–ù–∏—á–µ–≥–æ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å.')
        return
    bot.send_message(m.chat.id, f'–ù–∞—Å—Ç—Ä–æ–π–∫–∞ {setting} –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∞ –Ω–∞ {result}.')


@bot.message_handler(commands=['admin'], func=lambda c: admin_command(c))
def joke_handler(m):
    bot.send_message(m.chat.id, '–í–∞—à–∞ —Ä—ã–±–∫–∞ –ø–æ–ª—É—á–∏–ª–∞ 9999 –æ—á–∫–æ–≤ —ç–≤–æ–ª—é—Ü–∏–∏! (—à—É—Ç–∫–∞)')


@bot.message_handler(commands=['battle'], func=lambda c: admin_command(c))
def init_handler(m):
    seafight()
    bot.send_message(m.chat.id, '–í–æ–π–Ω–∞!')


@bot.message_handler(commands=['init'], func=lambda c: admin_command(c))
def init_handler(m):
    db.init_seas()
    bot.send_message(m.chat.id, '–ú–æ—Ä—è –ø–æ–¥–∫–ª—é—á–µ–Ω—ã!')


@bot.message_handler(commands=['wipe'], func=lambda c: admin_command(c))
def wipe_handler(m):
    db.wipe()
    bot.send_message(m.chat.id, '–í–∞–π–ø –¥–∞–Ω–Ω—ã—Ö!')


@bot.message_handler(commands=['score'])
def score_handler(m):
    bot.send_message(m.chat.id, db.score())


@bot.message_handler(commands=['drop'], func=lambda c: admin_command(c))
def drop_handler(m):
    db.drop()
    bot.send_message(m.chat.id, '–°–±—Ä–æ—Å–∏–ª –æ—á–∫–∏ –≤—Å–µ–º –º–æ—Ä—è–º!')


@bot.message_handler(commands=['fishname'], func=lambda c: pm_command(c))
def fishname_handler(m):
    if m.text.count(' ') == 0:
        bot.send_message(
            m.chat.id, '–°–º–µ–Ω–∏—Ç—å –Ω–∏–∫ –º–æ–∂–Ω–æ –∫–æ–º–∞–Ω–¥–æ–π /fishname –Ω–∏–∫.')
        return
    if user['changename'] > 0:
        no = 0
        name = m.text.split(' ')[1]
        if not 2 <= len(name) <= 20 or not name.isalnum():
            bot.send_message(
                m.chat.id, '–î–ª–∏–Ω–∞ –Ω–∏–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç 2—Ö –¥–æ 20 —Å–∏–º–≤–æ–ª–æ–≤ –∏ –Ω–µ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å—Ç—Ä–∞–Ω–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤!')
            return
        db.change_name(user, name)
        bot.send_message(
            m.chat.id, f'–í—ã —É—Å–ø–µ—à–Ω–æ —Å–º–µ–Ω–∏–ª–∏ –∏–º—è –Ω–∞ "*{name}*"!', parse_mode='markdown')
    else:
        bot.send_message(m.chat.id, '–ü–æ–ø—ã—Ç–∫–∏ —Å–º–µ–Ω–∏—Ç—å –Ω–∏–∫ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å!')


@bot.message_handler(commands=['start'], func=lambda c: pm_command(c))
def start(m):
    if db.get_user(m.from_user.id):
        return

    db.create_user(m.from_user)
    sea_choice(m)

    if m.text.count(' ') == 0:
        return

    ref = m.text.split(' ')[1]
    friend = db.process_referal(ref, m.from_user)
    if not friend:
        return
    bot.send_message(friend, m.from_user.first_name +
                     ' –∑–∞—à–µ–ª –≤ –∏–≥—Ä—É –ø–æ –≤–∞—à–µ–π —Ä–µ—Ñ–µ—Ä–∞–ª–∫–µ! –ö–æ–≥–¥–∞ –æ–Ω –ø–æ–∏–≥—Ä–∞–µ—Ç –Ω–µ–º–Ω–æ–≥–æ, –≤—ã –ø–æ–ª—É—á–∏—Ç–µ +1 –∫ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å–∏–ª–µ!')


def sea_choice(m):
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
    for sea in db.get_joinable_seas():
        kb.add(types.KeyboardButton(sea_ru(sea['name'])))
    bot.send_message(
        m.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ, –∑–∞ –∫–∞–∫–æ–µ –∏–∑ –º–æ—Ä–µ–π –≤—ã –±—É–¥–µ—Ç–µ —Å—Ä–∞–∂–∞—Ç—å—Å—è.', reply_markup=kb)


def mainmenu(user):
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add(types.KeyboardButton('üí¢–ê—Ç–∞–∫–∞'), types.KeyboardButton('üõ°–ó–∞—â–∏—Ç–∞'))
    kb.add(types.KeyboardButton('üçñü•¨–ü–∏—Ç–∞–Ω–∏–µ'),
           types.KeyboardButton('‚ÑπÔ∏è–ò–Ω—Ñ–æ –ø–æ –∏–≥—Ä–µ'))
    kb.add(types.KeyboardButton('üêü–û–±–æ –º–Ω–µ'))

    needed = countnextlvl(user['lastlvl'])

    text = ''
    text += 'üêü–ò–º—è —Ä—ã–±—ã: '+user['gamename']+'\n'
    try:
        text += f"üåä–†–æ–¥–Ω–æ–µ –º–æ—Ä–µ: {sea_ru(user['sea'])}\n" if user['sea'] else ''
    except:
        pass
    text += f'üí™–°–∏–ª—ã: {user["strenght"]}/{user["maxstrenght"]}\n'
    text += f'üèÖ–£—Ä–æ–≤–µ–Ω—å —ç–≤–æ–ª—é—Ü–∏–∏: {user["lvl"]}\n'
    text += f"üß¨–û—á–∫–∏ —ç–≤–æ–ª—é—Ü–∏–∏: {user['evolpoints']}/{needed}\n"
    text += f"üí¢–ê—Ç–∞–∫–∞: {user['stats']['attack']}\n"
    text += f'üõ°–ó–∞—â–∏—Ç–∞: '+str(user['stats']['def'])+'\n'
    text += f'–†–µ–≥–µ–Ω —Å–∏–ª: 1üí™ / ' + \
        str(round(20*user['strenghtregencoef'], 2))+' –º–∏–Ω—É—Ç\n'
    if user['freestatspoints'] > 0:
        text += '–î–æ—Å—Ç—É–ø–Ω—ã –æ—á–∫–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫! –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è - /upstats \n'
    bot.send_message(user['id'], '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.\n'+text, reply_markup=kb)


@bot.message_handler(func=lambda c: pm_command(c))
def allmessages(m):
    global battle_going
    user = db.get_user(m.from_user.id)
    if not user:
        return
    if m.from_user.id in ban:
        return
    if battle_going:
        bot.send_message(m.chat.id, '–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∏–¥—ë—Ç –±–∏—Ç–≤–∞ –º–æ—Ä–µ–π!')
        return

    if not user['sea']:
        if m.text in sea_localization:
            db.choose_sea(user, sea_ru(m.text))
            bot.send_message(
                user['id'], f'–¢–µ–ø–µ—Ä—å –≤—ã —Å—Ä–∞–∂–∞–µ—Ç–µ—Å—å –∑–∞ {m.text} –º–æ—Ä–µ!')
            mainmenu(user)
        else:
            sea_choice(m)
            return

    if m.text == 'üõ°–ó–∞—â–∏—Ç–∞':
        db.defend(user)
        bot.send_message(
            user['id'], '–í—ã –≤–ø–ª—ã–ª–∏ –≤ –æ–±–æ—Ä–æ–Ω—É —Å–≤–æ–µ–≥–æ –º–æ—Ä—è! –ñ–¥–∏—Ç–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å—Ä–∞–∂–µ–Ω–∏—è.')

    if m.text == 'üí¢–ê—Ç–∞–∫–∞':
        kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
        for ids in sealist:
            if ids != user['sea']:
                kb.add(types.KeyboardButton(seatoemoj(sea=ids)))
        bot.send_message(user['id'], '–í—ã–±–µ—Ä–∏—Ç–µ —Ü–µ–ª—å.', reply_markup=kb)

    if m.text in emojies_sea:
        atksea = seatoemoj(emoj=m.text)
        if user['sea'] != atksea:
            db.attack(user, atksea)
            bot.send_message(user['id'], '–í—ã –ø—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∏—Å—å –∫ –∞—Ç–∞–∫–µ –Ω–∞ ' +
                             sea_ru(atksea)+' –º–æ—Ä–µ! –ñ–¥–∏—Ç–µ –Ω–∞—á–∞–ª–∞ –±–∏—Ç–≤—ã.')
            mainmenu(user)

    if m.text == '‚ÑπÔ∏è–ò–Ω—Ñ–æ –ø–æ –∏–≥—Ä–µ':
        bot.send_message(m.chat.id, '–û—á–µ—Ä–µ–¥–Ω–æ–π –Ω–µ–æ–∫–æ–Ω—á–µ–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç –ü–∞—Å—é–∫–∞. –ü–æ–∫–∞ —á—Ç–æ –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –≤—ã–±—Ä–∞—Ç—å –º–æ—Ä–µ –∏ —Å—Ä–∞–∂–∞—Ç—å—Å—è –∑–∞ –Ω–µ–≥–æ, ' +
                         '–ø–æ–ª—É—á–∞—è –¥–ª—è –Ω–µ–≥–æ –æ—á–∫–∏, –ø–æ–≤—ã—à–∞—Ç—å —É—Ä–æ–≤–µ–Ω—å –∏ —É–ª—É—á—à–∞—Ç—å —Å–≤–æ–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏. –ë–∏—Ç–≤—ã –≤ 12:00, 16:00, 20:00 –∏ 24:00 –ø–æ —Ö—É–π –µ–≥–æ –∑–Ω–∞–µ—Ç –∫–∞–∫–æ–º—É –≤—Ä–µ–º–µ–Ω–∏.')

    if m.text == '/menu':
        mainmenu(user)

    if m.text == '/upstats':
        if user['freestatspoints'] > 0:
            text = '–°–≤–æ–±–æ–¥–Ω—ã–µ –æ—á–∫–∏: ' + \
                str(user['freestatspoints']) + \
                '.\n–í—ã–±–µ—Ä–∏—Ç–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫—É –¥–ª—è –ø—Ä–æ–∫–∞—á–∫–∏.'
            kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
            kb.add(types.KeyboardButton('üí¢'), types.KeyboardButton('üõ°'))
            bot.send_message(user['id'], text, reply_markup=kb)
        else:
            bot.send_message(user['id'], '–ù–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã—Ö –æ—á–∫–æ–≤!')

    if m.text == 'üí¢':
        if user['freestatspoints'] > 0:
            db.upgrade_attack(user)
            bot.send_message(user['id'], '–í—ã —Å—Ç–∞–ª–∏ —Å–∏–ª—å–Ω–µ–µ!')
        else:
            bot.send_message(user['id'], '–ù–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã—Ö –æ—á–∫–æ–≤!')
        user = db.get_user(user['id'])
        mainmenu(user)

    if m.text == 'üõ°':
        if user['freestatspoints'] > 0:
            db.upgrade_defense(user)
            bot.send_message(user['id'], '–í—ã —Å—Ç–∞–ª–∏ —Å–∏–ª—å–Ω–µ–µ!')
        else:
            bot.send_message(user['id'], '–ù–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã—Ö –æ—á–∫–æ–≤!')
        user = db.get_user(user['id'])
        mainmenu(user)

    if m.text == '/referal':
        ref = db.get_referal(user)
        bot.send_message(user['id'], '–í–æ—Ç –≤–∞—à–∞ —Å—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –¥—Ä—É–∑–µ–π:\n' +
                         'https://telegram.me/Fishwarsbot?start='+ref)

    if m.text == 'üçñü•¨–ü–∏—Ç–∞–Ω–∏–µ':
        kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
        kb.add(types.KeyboardButton('üîù–ú–µ–ª–∫–æ–≤–æ–¥—å–µ'),
               types.KeyboardButton('üï≥–ì–ª—É–±–∏–Ω—ã'))
        kb.add(types.KeyboardButton('‚¨ÖÔ∏è–ù–∞–∑–∞–¥'))
        bot.send_message(
            m.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ, –≥–¥–µ –±—É–¥–µ—Ç–µ –ø—ã—Ç–∞—Ç—å—Å—è –∏—Å–∫–∞—Ç—å –ø–∏—â—É. –ß–µ–º –±–æ–ª—å—à–µ –≤—ã –ø–∏—Ç–∞–µ—Ç–µ—Å—å, —Ç–µ–º –±—ã—Å—Ç—Ä–µ–µ –∏–¥—ë—Ç —Ä–∞–∑–≤–∏—Ç–∏–µ!', reply_markup=kb)

    if m.text == 'üîù–ú–µ–ª–∫–æ–≤–æ–¥—å–µ':
        strenght = 1
        if user['strenght'] >= strenght:
            if user['status'] == 'free':
                db.go_eating(user, strenght)
                bot.send_message(
                    m.chat.id, '–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏—Å—å –∏—Å–∫–∞—Ç—å –ø–∏—â—É –Ω–∞ –ø–æ–±–µ—Ä–µ–∂—å–µ.')
                t = threading.Timer(random.randint(60, 90),
                                    coastfeed, args=[user])
                t.start()
            else:
                bot.send_message(user['id'], '–í—ã —É–∂–µ –∑–∞–Ω—è—Ç—ã —á–µ–º-—Ç–æ!')
        else:
            bot.send_message(
                user['id'], '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å–∏–ª - –¥–∞–∂–µ —Ä—ã–±–∞–º –Ω—É–∂–µ–Ω –æ—Ç–¥—ã—Ö!')
        user = db.get_user(user['id'])
        mainmenu(user)

    if m.text == 'üï≥–ì–ª—É–±–∏–Ω—ã':
        strenght = 2
        if user['strenght'] >= strenght:
            if user['status'] == 'free':
                db.go_eating(user, strenght)
                bot.send_message(
                    m.chat.id, '–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏—Å—å –∏—Å–∫–∞—Ç—å –ø–∏—â—É –≤ –≥–ª—É–±–∏–Ω—ã –º–æ—Ä—è.')
                t = threading.Timer(random.randint(60, 90),
                                    depthsfeed, args=[user])
                t.start()
            else:
                bot.send_message(user['id'], '–í—ã —É–∂–µ –∑–∞–Ω—è—Ç—ã —á–µ–º-—Ç–æ!')
        else:
            bot.send_message(
                user['id'], '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å–∏–ª - –¥–∞–∂–µ —Ä—ã–±–∞–º –Ω—É–∂–µ–Ω –æ—Ç–¥—ã—Ö!')
        user = db.get_user(user['id'])
        mainmenu(user)

    if m.text == 'üêü–û–±–æ –º–Ω–µ' or m.text == '‚¨ÖÔ∏è–ù–∞–∑–∞–¥':
        mainmenu(user)


def coastfeed(user):
    db.free_user(user)
    luckytexts = ['–ù–∞ –±–µ—Ä–µ–≥–µ –≤—ã –∑–∞–º–µ—Ç–∏–ª–∏ —Å—Ç–∞—é –º–∞–ª—å–∫–æ–≤ –∏ —Ä–µ—à–∏–ª–∏, —á—Ç–æ —ç—Ç–æ –±—É–¥–µ—Ç –æ—Ç–ª–∏—á–Ω—ã–º –ø–µ—Ä–µ–∫—É—Å–æ–º.',
                  '–ù–∞ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ –ø–ª–∞–≤–∞–ª —Ç—Ä—É–ø –∫–∞–∫–æ–π-—Ç–æ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–π —Ä—ã–±—ã. –ï–≥–æ –≤—ã –∏ —Ä–µ—à–∏–ª–∏ —Å—å–µ—Å—Ç—å. –†—ã–±—ã –≤–æ–æ–±—â–µ –µ–¥—è—Ç –≤—Å—ë, —á—Ç–æ –≤–∏–¥—è—Ç.']
    falsetexts = ['–ü–æ–∫–∞ –≤—ã –¥–æ–±–∏—Ä–∞–ª–∏—Å—å –¥–æ –±–µ—Ä–µ–≥–∞, –≤—ã –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞–ª–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ –≤–∏–±—Ä–∞—Ü–∏–∏ –Ω–µ–ø–æ–¥–∞–ª–µ–∫—É, –æ–∑–Ω–∞—á–∞—é—â–∏–µ, —á—Ç–æ –∫–æ–≥–æ-—Ç–æ –µ–¥—è—Ç. –ß—Ç–æ–±—ã ' +
                  '—Å–∞–º–∏–º –Ω–µ —Å—Ç–∞—Ç—å –∫–æ—Ä–º–æ–º, –≤—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –º–µ—Å—Ç–æ.']
    chance = 70*user['agility']
    if 'slow' in user['skills']:
        chance += user['skills']['slow']['lvl']*0.5
    coef = 1
    if random.randint(1, 100) <= chance:
        i = user['recievepoints']*user['pointmodifer']*coef
        bottompoints = int(i*0.8)
        toppoints = int(i*1.2)
        points = random.randint(bottompoints, toppoints)
        if points <= 0:
            points = 1
        text = random.choice(luckytexts)
        text += '\n–ü–æ–ª—É—á–µ–Ω–æ:\n'+'*–û—á–∫–∏ —ç–≤–æ–ª—é—Ü–∏–∏*: '+str(points)+'üß¨'
        bot.send_message(user['id'], text, parse_mode='markdown')
        recieveexp(user, points)
    else:
        text = random.choice(falsetexts)
        bot.send_message(user['id'], text, parse_mode='markdown')


def depthsfeed(user):
    db.free_user(user)
    luckytexts = ['–í –≥–ª—É–±–∏–Ω–∞—Ö –º–æ—Ä—è –≤—ã –Ω–∞—à–ª–∏ —Å—Ç–∞—é –∫—Ä–∞–±–æ–≤. –ü—Ä–∏—à–ª–æ—Å—å –ø–æ—Ç—Ä—É–¥–∏—Ç—å—Å—è, —á—Ç–æ–±—ã –Ω–µ –±—ã—Ç—å –ø–æ–∫—É—Å–∞–Ω–Ω—ã–º–∏, –Ω–æ –≤ –∏—Ç–æ–≥–µ –≤—ã –Ω–∞–µ–ª–∏—Å—å.',
                  '–í—ã –Ω–∞—à–ª–∏ –∫–∞–∫–∏–µ-—Ç–æ –≤–∫—É—Å–Ω—ã–µ –Ω–∞ –≤–∏–¥ —Ä–∞—Å—Ç–µ–Ω–∏—è. –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—á–∫–æ–≤ —ç–≤–æ–ª—é—Ü–∏–∏ —Å–æ–π–¥—ë—Ç.']
    falsetexts = ['–í –æ–¥–∏–Ω –º–æ–º–µ–Ω—Ç –≤–∞—à–µ–≥–æ –∑–∞–ø–ª—ã–≤–∞ –≤—ã –æ—â—É—Ç–∏–ª–∏, —á—Ç–æ –¥–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —Å–ª–∏—à–∫–æ–º —Å–∏–ª—å–Ω—ã–º. –ï—Å–ª–∏ –±—ã –≤—ã –ø–æ–ø–ª—ã–ª–∏ –¥–∞–ª—å—à–µ, —Ç–æ –≤–∞—Å –ø—Ä–æ—Å—Ç–æ —Å–ø–ª—é—â–∏–ª–æ –±—ã.']
    chance = 55*user['agility']
    if 'slow' in user['skills']:
        chance += user['skills']['slow']['lvl']*0.5
    coef = 2.5
    if random.randint(1, 100) <= chance:
        i = user['recievepoints']*user['pointmodifer']*coef
        bottompoints = int(i*0.8)
        toppoints = int(i*1.2)
        points = random.randint(bottompoints, toppoints)
        if points <= 0:
            points = 1
        text = random.choice(luckytexts)
        text += '\n–ü–æ–ª—É—á–µ–Ω–æ:\n'+'*–û—á–∫–∏ —ç–≤–æ–ª—é—Ü–∏–∏*: '+str(points)+'üß¨'
        bot.send_message(user['id'], text, parse_mode='markdown')
        recieveexp(user, points)
    else:
        text = random.choice(falsetexts)
        bot.send_message(user['id'], text, parse_mode='markdown')


def recieveexp(user, exp):
    db.increase_exp(user, exp)
    c = int(countnextlvl(user['lastlvl']))
    if user['evolpoints']+exp >= c:
        db.user_evolve(user, c)
        bot.send_message(
            user['id'], '–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã —ç–≤–æ–ª—é—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–ª–∏! –ü—Ä–æ–∫–∞—á–∫–∞ —Å–∫–∏–ª–ª–æ–≤ - /skills (–ø–æ–∫–∞ —á—Ç–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞).')
        user = db.get_user(user['id'])
        if user['lvl'] == 3 and user['inviter'] != None:
            db.achieve_referal_bonus(user)
            bot.send_message(user['inviter'], user['gamename'] +
                             ' –æ—Å–≤–æ–∏–ª—Å—è –≤ –∏–≥—Ä–µ! –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ +1 –∫ –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç–∏.')


def endrest():
    global battle_going
    battle_going = False


def seafight():
    seas = {}
    cusers = db.users.find({})

    for ids in sealist:
        seas.update(createsea(ids))

    for ids in cusers:
        if ids['battle']['action'] == 'def':
            seas[ids['sea']]['defers'].update({ids['id']: ids})
        elif ids['battle']['action'] == 'attack':
            seas[ids['battle']['target']]['attackers'].update({ids['id']: ids})

    for ids in seas:
        sea = seas[ids]

        for sea_defer in sea['defers']:
            user = sea['defers'][sea_defer]
            defpower = user['stats']['def']
            if 'fat' in user['skills']:
                defpower += defpower*user['skills']['fat']['lvl']*0.01
            if 'steelleather' in user['skills']:
                if random.randint(1, 1000) <= user['skills']['steelleather']['lvl']*0.5*10:
                    if len(seas[ids]['attackers']) > 0:
                        trgt = random.choice(seas[ids]['attackers'])
                        trgt['attack'] = trgt['attack']/2
                        bot.send_message(user['id'], '–°–≤–æ–µ–π –∫–æ–∂–µ–π –≤—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏ —Ä—ã–±—É ' +
                                         trgt['gamename']+', —Å–Ω–∏–∑–∏–≤ –µ–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –Ω–∞ 50%!')
            sea['defpower'] += defpower
        for sea_attacker in sea['attackers']:
            user = sea['attackers'][sea_attacker]
            if 'sharpteeth' in user['skills']:
                user['stats']['attack'] += user['stats']['attack'] * \
                    user['skills']['sharpteeth']['lvl']*0.01
            sea['attackerspower'] += user['stats']['attack']

        if sea['defpower'] < sea['attackerspower']:
            sea['saved'] = False
    text = ''
    for ids in seas:
        sea = seas[ids]
        if sea['saved'] == False:
            sea['score'] += 0
            scores = []
            for idss in sea['attackers']:
                atker = sea['attackers'][idss]
                if atker['sea'] not in scores:
                    scores.append(atker['sea'])
                    seas[atker['sea']]['score'] += 3
            text += 'üí¢' + \
                sea_ru(sea['name']) + \
                ' –º–æ—Ä–µ –ø–æ—Ç–µ—Ä–ø–µ–ª–æ –ø–æ—Ä–∞–∂–µ–Ω–∏–µ –≤ –±–∏—Ç–≤–µ! –¢–æ–ø –∞—Ç–∞–∫—É—é—â–∏—Ö:\n'
            who = 'attackers'
            stat = 'attack'
            text += battletext(sea, who, stat)
            text += '–¢–æ–ø –∑–∞—â–∏—Ç–Ω–∏–∫–æ–≤:\n'
            who = 'defers'
            stat = 'def'
            text += battletext(sea, who, stat)
        else:
            sea['score'] += 8
            text += 'üõ°' + \
                sea_ru(sea['name']) + \
                ' –º–æ—Ä–µ –æ—Ç—Å—Ç–æ—è–ª–æ —Å–≤–æ—é —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—é! –¢–æ–ø –∑–∞—â–∏—Ç–Ω–∏–∫–æ–≤:\n'
            who = 'defers'
            stat = 'def'
            text += battletext(sea, who, stat)
            text += '–¢–æ–ø –∞—Ç–∞–∫—É—é—â–∏—Ö:\n'
            who = 'attackers'
            stat = 'attack'
            text += battletext(sea, who, stat)
    text += '–ù–∞—á–∏—Å–ª–µ–Ω–Ω—ã–µ –æ—á–∫–∏:\n\n'
    for ids in seas:
        text += sea_ru(seas[ids]['name'])+' –º–æ—Ä–µ: ' + \
            str(seas[ids]['score'])+' –æ—á–∫–æ–≤\n'
        db.add_sea_score(seas[ids])
    db.reset_battle_actions()
    bot.send_message(officialchat, '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±–∏—Ç–≤—ã:\n\n'+text)


def battletext(sea, who, stat):
    top = 5
    text = ''
    alreadyintext = []
    for i in range(top):
        intext = None
        maxstat = 0
        for idss in sea[who]:
            user = sea[who][idss]
            if user['stats'][stat] > maxstat and user['id'] not in alreadyintext:
                maxstat = user['stats'][stat]
                intext = user
        if intext != None:
            alreadyintext.append(intext['id'])
            text += seatoemoj(intext['sea'])
            text += intext['gamename']
            text += ', '
    if len(sea[who]) > 0:
        text = text[:len(text)-2]
        text += '.'
    text += '\n\n'
    return text


def countnextlvl(lastlvl):
    if lastlvl != 0:
        return int(lastlvl*2.9)
    else:
        return 10


def createsea(sea):
    return {
        sea: {
            'name': sea,
            'defpower': 0,
            'attackerspower': 0,
            'defers': {},
            'attackers': {},
            'saved': True,
            'score': 0
        }
    }


def timecheck():
    global battle_going

    now = datetime.now(pytz.timezone('Europe/Kiev') )
    hour = now.hour
    minute = now.minute
    second = now.second

    if hour in fighthours and battle_going == False and minute == 0:
        seafight()
        battle_going = True
        t = threading.Timer(120, endrest).start()
    db.global_strength_regen(now.timestamp())
    if second == 0:
        global ban
        ban = []
    t = threading.Timer(1, timecheck).start()


timecheck()

settings = db.get_settings()

users_rebooted = 0

for user in db.users.find({'status': {'$ne': 'free'}}):
    if settings['reboot_return']:
        coastfeed(user)
        bot.send_message(user['id'], '–í—ã –Ω–∞—à–ª–∏ –µ–¥—É –±—ã—Å—Ç—Ä–µ–µ —á–µ–º –æ–±—ã—á–Ω–æ!')
    else:
        threading.Timer(random.randint(60, 90), coastfeed, args=[user]).start()
        bot.send_message(user['id'], '–í—ã –∑–∞–¥–µ—Ä–∂–∏–≤–∞–µ—Ç–µ—Å—å –∏–∑-–∑–∞... –ø–æ–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π, –Ω–æ –≤—ã –Ω–µ —Å–¥–∞–µ—Ç–µ—Å—å.')
    users_rebooted += 1
bot.send_message(creator, f'–í—ã –¥–æ–µ–±–∞–ª–∏—Å—å –¥–æ {users_rebooted} –∏–≥—Ä–æ–∫–æ–≤!')

db.free_all_users()

print('7777')
bot.polling(none_stop=True, timeout=600)
