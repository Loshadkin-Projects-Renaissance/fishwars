# -*- coding: utf-8 -*-
import os
import telebot
import time
import random
import threading
from emoji import emojize
from telebot import types
from pymongo import MongoClient
import traceback
from datetime import datetime

token = os.environ['TELEGRAM_TOKEN']
bot = telebot.TeleBot(token)


client=MongoClient(os.environ['database'])
db=client.fishwars
users=db.users
allseas=db.seas

fighthours=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]
sealist=['crystal', 'black', 'moon']
officialchat=441399484
rest=False


try:
    pass

except Exception as e:
    print('–û—à–∏–±–∫–∞:\n', traceback.format_exc())
    bot.send_message(441399484, traceback.format_exc())

 

@bot.message_handler(commands=['start'])
def start(m):
    user=users.find_one({'id':m.from_user.id})
    global rest
    if user==None:
        if rest==False:
            users.insert_one(createuser(m.from_user))
            kb=types.ReplyKeyboardMarkup(resize_keyboard=True)
            for ids in sealist:
                kb.add(types.KeyboardButton(sea_ru(ids)))
            bot.send_message(m.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ, –∑–∞ –∫–∞–∫–æ–µ –∏–∑ –º–æ—Ä–µ–π –≤—ã –±—É–¥–µ—Ç–µ —Å—Ä–∞–∂–∞—Ç—å—Å—è.', reply_markup=kb)
        else:
            bot.send_message(m.chat.id, '–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∏–¥—ë—Ç –±–∏—Ç–≤–∞ –º–æ—Ä–µ–π!')

        
def mainmenu(user):
    kb=types.ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add(types.KeyboardButton('üó°–ê—Ç–∞–∫–∞'), types.KeyboardButton('üõ°–ó–∞—â–∏—Ç–∞'))
    kb.add(types.KeyboardButton('‚ÑπÔ∏è–ò–Ω—Ñ–æ –ø–æ –∏–≥—Ä–µ'))
    bot.send_message(user['id'], '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.', reply_markup=kb)
        

@bot.message_handler()
def allmessages(m):
    global rest
    user=users.find_one({'id':m.from_user.id})
    if user!=None:
        if rest==False:
            if user['sea']==None:
                if m.text=='üíé–ö—Ä–∏—Å—Ç–∞–ª—å–Ω–æ–µ':
                    users.update_one({'id':user['id']},{'$set':{'sea':'crystal'}})
                    bot.send_message(user['id'], '–¢–µ–ø–µ—Ä—å –≤—ã —Å—Ä–∞–∂–∞–µ—Ç–µ—Å—å –∑–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—é üíé–ö—Ä–∏—Å—Ç–∞–ª—å–Ω–æ–≥–æ –º–æ—Ä—è!')
                    mainmenu(user)
                if m.text=='‚ö´Ô∏è–ß—ë—Ä–Ω–æ–µ':
                    users.update_one({'id':user['id']},{'$set':{'sea':'black'}})
                    bot.send_message(user['id'], '–¢–µ–ø–µ—Ä—å –≤—ã —Å—Ä–∞–∂–∞–µ—Ç–µ—Å—å –∑–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—é ‚ö´Ô∏è–ß—ë—Ä–Ω–æ–≥–æ –º–æ—Ä—è!')
                    mainmenu(user)
                if m.text=='üåô–õ—É–Ω–Ω–æ–µ':
                    users.update_one({'id':user['id']},{'$set':{'sea':'moon'}})
                    bot.send_message(user['id'], '–¢–µ–ø–µ—Ä—å –≤—ã —Å—Ä–∞–∂–∞–µ—Ç–µ—Å—å –∑–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—é üåô–õ—É–Ω–Ω–æ–≥–æ –º–æ—Ä—è!')
                    mainmenu(user)
            if m.text=='üõ°–ó–∞—â–∏—Ç–∞':
                users.update_one({'id':user['id']},{'$set':{'battle.action':'def'}})
                bot.send_message(user['id'], '–í—ã –≤–ø–ª—ã–ª–∏ –≤ –æ–±–æ—Ä–æ–Ω—É —Å–≤–æ–µ–≥–æ –º–æ—Ä—è! –ñ–¥–∏—Ç–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å—Ä–∞–∂–µ–Ω–∏—è.')
            if m.text=='üó°–ê—Ç–∞–∫–∞':
                kb=types.ReplyKeyboardMarkup(resize_keyboard=True)
                for ids in sealist:
                    if ids!=user['sea']:
                        kb.add(types.KeyboardButton(seatoemoj(sea=ids)))
                bot.send_message(user['id'], '–í—ã–±–µ—Ä–∏—Ç–µ —Ü–µ–ª—å.', reply_markup=kb)
            if m.text=='üåô' or m.text=='üíé' or m.text=='‚ö´Ô∏è':
                atksea=seatoemoj(emoj=m.text)
                if user['sea']!=atksea:
                    users.update_one({'id':user['id']},{'$set':{'battle.action':'attack', 'battle.target':atksea}})
                    bot.send_message(user['id'], '–í—ã –ø—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∏—Å—å –∫ –∞—Ç–∞–∫–µ –Ω–∞ '+sea_ru(atksea)+' –º–æ—Ä–µ! –ñ–¥–∏—Ç–µ –Ω–∞—á–∞–ª–∞ –±–∏—Ç–≤—ã.')
            if m.text=='‚ÑπÔ∏è–ò–Ω—Ñ–æ –ø–æ –∏–≥—Ä–µ':
                bot.send_message(m.chat.id, '–û—á–µ—Ä–µ–¥–Ω–æ–π –Ω–µ–æ–∫–æ–Ω—á–µ–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç –ü–∞—Å—é–∫–∞. –ü–æ–∫–∞ —á—Ç–æ –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –≤—ã–±—Ä–∞—Ç—å –º–æ—Ä–µ –∏ —Å—Ä–∞–∂–∞—Ç—å—Å—è –∑–∞ –Ω–µ–≥–æ, '+
                                 '–ø–æ–ª—É—á–∞—è –¥–ª—è –Ω–µ–≥–æ –æ—á–∫–∏. –ë–∏—Ç–≤—ã –∫–∞–∂–¥—ã–π —á–∞—Å.')
        else:
            bot.send_message(m.chat.id, '–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∏–¥—ë—Ç –±–∏—Ç–≤–∞ –º–æ—Ä–µ–π!')
                
            
            

            
def seatoemoj(sea=None, emoj=None):
    if sea=='moon':
        return 'üåô'
    if sea=='crystal':
        return 'üíé'
    if sea=='black':
        return '‚ö´Ô∏è'
    if emoj=='‚ö´Ô∏è':
        return 'black'
    if emoj=='üíé':
        return 'crystal'
    if emoj=='üåô':
        return 'moon'

    
def endrest():
    global rest
    rest=False
    
def seafight():
    seas={}
    cusers=users.find({})
    for ids in sealist:
        seas.update(createsea(ids))
    for ids in cusers:
        if ids['battle']['action']=='def':
            seas[ids['sea']]['defers'].update({ids['id']:ids})
        elif ids['battle']['action']=='attack':
            seas[ids['battle']['target']]['attackers'].update({ids['id']:ids})
    
    for ids in seas:
        sea=seas[ids]
        print(sea)
        for idss in sea['defers']:
            user=sea['defers'][idss]
            sea['defpower']+=user['stats']['def']
        for idss in sea['attackers']:
            user=sea['attackers'][idss]
            sea['attackerspower']+=user['stats']['attack']
            
        if sea['defpower']<sea['attackpower']:
            sea['saved']=False
    text=''
    for ids in seas:
        sea=seas[ids]
        if sea['saved']==False:
            sea['score']+=0
            scores=[]
            for idss in sea['attackers']:
                atker=sea['attackers'][idss]
                if atker['sea'] not in scores:
                    scores.append(atker['sea'])
                    seas[atker['sea']]['score']+3
            text+='üó°'+sea_ru(sea['name'])+' –º–æ—Ä–µ –ø–æ—Ç–µ—Ä–ø–µ–ª–æ –ø–æ—Ä–∞–∂–µ–Ω–∏–µ –≤ –±–∏—Ç–≤–µ! –¢–æ–ø –∞—Ç–∞–∫—É—é—â–∏—Ö:\n'
            who='attackers'
            stat='attack'
            text+=battletext(sea, who, stat)
            text+='–¢–æ–ø –∑–∞—â–∏—Ç–Ω–∏–∫–æ–≤:\n'
            who='defers'
            stat='def'
            text+=battletext(sea, who, stat)
        else:
            sea['score']+=8
            text+='üõ°'+sea_ru(sea['name'])+' –º–æ—Ä–µ –æ—Ç—Å—Ç–æ—è–ª–æ —Å–≤–æ—é —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—é! –¢–æ–ø –∑–∞—â–∏—Ç–Ω–∏–∫–æ–≤:\n'
            who='defers'
            stat='def'
            text+=battletext(sea, who, stat)
            text+='–¢–æ–ø –∞—Ç–∞–∫—É—é—â–∏—Ö:\n'
            who='attackers'
            stat='attack'
            text+=battletext(sea, who, stat)
    text+='–ù–∞—á–∏—Å–ª–µ–Ω–Ω—ã–µ –æ—á–∫–∏:\n\n'
    for ids in seas:
        text+=sea_ru(seas[ids]['name'])+' –º–æ—Ä–µ: '+str(seas[ids]['score'])+' –æ—á–∫–æ–≤\n'
        allseas.update_one({'name':seas[ids]['name']},{'$inc':{'score':seas[ids]['score']}})
    users.update_many({},{'$set':{'battle.target':None, 'battle.action':None}})
    bot.send_message(officialchat, '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±–∏—Ç–≤—ã:\n\n'+text)
            
            
         
        
def battletext(sea, who, stat):
    top=5
    i=0
    text=''
    alreadyintext=[]
    while i<top:
        intext=None
        maxstat=0
        for idss in sea[who]:
            user=sea[who][idss]
            if user['stats'][stat]>maxstat and user['id'] not in alreadyintext:
                maxstat=user['stats'][stat]
                intext=user
        if intext!=None:
            alreadyintext.append(intext['id'])
            text+=intext['gamename']
            if i+1==top:
                text+=', '
            else:
                text+='.\n\n'
        i+=1
    return text
            
            
def createuser(user):
    stats={
        'attack':1,
        'def':1
    }
    battle={
        'action':None,
        'target':None
    }
    return {
        'id':user.id,
        'name':user.first_name,
        'gamename':user.first_name,
        'stats':stats,
        'sea':None,
        'battle':battle
    }

def sea_ru(sea):
    if sea=='crystal':
        return 'üíé–ö—Ä–∏—Å—Ç–∞–ª—å–Ω–æ–µ'
    if sea=='black':
        return '‚ö´Ô∏è–ß—ë—Ä–Ω–æ–µ'
    if sea=='moon':
        return 'üåô–õ—É–Ω–Ω–æ–µ'

   
def createsea(sea):
    return {sea:{
        'name':sea,
        'defpower':0,
        'attackerspower':0,
        'defers':{},
        'attackers':{},
        'saved':True,
        'score':0
    }
           }

def timecheck():
    ctime=str(datetime.fromtimestamp(time.time()+3*3600)).split(' ')[1]
    global rest
    chour=int(ctime.split(':')[0])
    cminute=int(ctime.split(':')[1])
    if True:#chour in fighthours and rest==False and cminute==0:
        seafight()
        rest=True
        t=threading.Timer(120, endrest)
        t.start()
    t=threading.Timer(1, timecheck)
    t.start()
    

timecheck()
    
print('7777')
bot.polling(none_stop=True,timeout=600)

